% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wfs_eus_cp.R
\name{catreus_wfs_get_parcels_bbox}
\alias{catreus_wfs_get_parcels_bbox}
\title{Retrieve Parcel Data in Pais Vasco Based on Bounding Box Coordinates}
\usage{
catreus_wfs_get_parcels_bbox(x, srs, verbose = FALSE, count = 10)
}
\arguments{
\item{x}{Bounding box coordinates or a spatial object, which could be:
\itemize{
\item A numeric vector of length 4 with the coordinates defining the bounding box:
\code{c(latitude1, longitude1, latitude2, longitude2)}.
\item An \code{sf/sfc} object from the \CRANpkg{sf} package.
}}

\item{srs}{Spatial Reference System (SRS) or Coordinate Reference System (CRS) code
to be used in the query. For best results, ensure the coordinates are in ETRS89
(EPSG:4258) or WGS84 (EPSG:4326) when using latitude and longitude.}

\item{verbose}{Logical; if \code{TRUE}, additional information about function operations
is printed. Useful for debugging. Default is \code{FALSE}.}

\item{count}{Integer specifying the maximum number of parcel records to return.
Default is 10.}
}
\value{
Depending on the input and geographic location, this function may return:
\itemize{
\item A message detailing the success of the query and the province fetched.
\item A warning message if the bounding box spans multiple provinces.
\item An error message if the coordinates are not within Pais Vasco.
}
}
\description{
Fetches parcel data within a specified bounding box. The function determines
the province based on the provided coordinates and fetches parcel data for
Bizkaia, Gipuzkoa, or Araba/√Ålava accordingly. It checks if the bounding box
falls within a single province and handles different CRS inputs.
}
\details{
This function uses reverse geocoding to determine the province within the Basque Country
from the coordinates provided. Based on the province, it delegates the data fetching to
specific functions handling each province's data. It supports flexible input types and
handles geographical coordinate transformations internally if needed.
}
\examples{
\donttest{
# Define bounding box coordinates for an urban location in Gipuzkoa
coords_gipuzkoa <- c(43.312, -2.994, 43.313, -2.993)

# Fetch parcel data using the bounding box
parcels_gipuzkoa <- catreus_wfs_get_parcels_bbox(coords_gipuzkoa, srs = 25830, count = 10)

library(ggplot2)
# Plot the parcels data
ggplot(parcels_gipuzkoa) +
  geom_sf() + ggtitle("Parcels Data for Gipuzkoa")

# Define bounding box coordinates for a location in Bizkaia
coords_bizkaia <- c(43.312, -2.994, 43.313, -2.993)

# Fetch parcel data using the bounding box
parcels_bizkaia <- catreus_wfs_get_parcels_bbox(coords_bizkaia, srs = 25830)

library(ggplot2)
# Plot the parcels data for Bizkaia
ggplot(parcels_bizkaia) +
  geom_sf() + ggtitle("Parcels Data for Bizkaia")

# Define bounding box coordinates for a location in Araba
coords_araba <- c(539032.421, 4744519.903, 539032.676, 4744522.22)

# Fetch parcel data using the bounding box
parcels_araba <- catreus_wfs_get_parcels_bbox(coords_araba, srs = 25830, count = 10)

library(ggplot2)
# Plot the parcels data for Araba
ggplot(parcels_araba) +
  geom_sf() + ggtitle("Parcels Data for Araba")
}
  
}
\seealso{
\code{\link[sf:st_bbox]{st_bbox}}, which is used to manage spatial bounding boxes.
}
